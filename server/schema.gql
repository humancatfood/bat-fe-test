type Booking {
  id: ID
  name: String!

  # TODO: combine date and time into a singel field with some custom type 'Date' or something
  date: String!
  time: String!
  partySize: Int!
  seated: Boolean
  cancelled: Boolean
  notes: String
}

input BookingInput {
  name: String!
  date: String!
  time: String!
  partySize: Int!
  notes: String
}

type Query {
  bookings(day: String!): [Booking]
}

type Mutation {
  newBooking(booking: BookingInput!): Booking
}

type Subscription {
  bookings(day: String!): [Booking]
}
